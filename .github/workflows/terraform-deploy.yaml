name: terraform-deploy
on: 
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


jobs:

  terraform-setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform

    steps:


      - name: Checkout the repository to the runner
        uses: actions/checkout@v3


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2


      - name: Terraform init
        id: init
        run: terraform init


      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true


      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color


      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_vpc_cidr_block: ${{ vars.vpc_cidr_block }}
          TF_VAR_subnet_cidr_blocks: ${{ vars.subnet_cidr_blocks }}
          TF_VAR_route_table_cidr: ${{ vars.route_table_cidr }}
          TF_VAR_instance_types: ${{ vars.instance_types }}
          TF_VAR_hosted_zone: ${{ secrets.hosted_zone }}
        run: terraform plan -no-color -input=false
        continue-on-error: false


  terraform-apply:    
    needs: terraform-setup
    runs-on: ubuntu-latest
    defaults:

      run:
        working-directory: Terraform

    steps:


      - name: Checkout the repository
        uses: actions/checkout@v3


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2


      - name: Terraform Apply
        env:
          TF_VAR_vpc_cidr_block: ${{ vars.vpc_cidr_block }}
          TF_VAR_subnet_cidr_blocks: ${{ vars.subnet_cidr_blocks }}
          TF_VAR_route_table_cidr: ${{ vars.route_table_cidr }}
          TF_VAR_instance_types: ${{ vars.instance_types }}
          TF_VAR_hosted_zone: ${{ secrets.hosted_zone }}
        run: terraform apply -auto-approve
